@model IEnumerable<ControleDeContatos.Models.OrdemServicoModel>

@{
    ViewData["Title"] = "Ordens de Serviço";
}

<style>
    .ordens-header {
        background: linear-gradient(135deg, #17a2b8 0%, #138496 100%);
        color: white;
        padding: 20px 30px;
        border-radius: 10px 10px 0 0;
        margin-bottom: 0;
    }
    
    .ordens-container {
        background: white;
        border-radius: 10px;
        box-shadow: 0 4px 20px rgba(0,0,0,0.1);
        overflow: hidden;
        margin: 0 15px;
    }
    
    .search-section {
        background: #f8f9fa;
        padding: 20px 30px;
        border-bottom: 1px solid #e9ecef;
    }
    
    .search-input {
        border: 2px solid #e9ecef;
        border-radius: 8px;
        padding: 12px 15px;
        transition: all 0.3s ease;
    }
    
    .search-input:focus {
        border-color: #17a2b8;
        box-shadow: 0 0 0 3px rgba(23, 162, 184, 0.1);
    }
    
    .ordem-count {
        background: #17a2b8;
        color: white;
        padding: 8px 16px;
        border-radius: 20px;
        font-weight: 500;
        font-size: 14px;
    }
    
    .table-container {
        padding: 0;
        overflow-x: auto;
    }
    
    .table {
        margin-bottom: 0;
        min-width: 800px;
    }
    
    .table th {
        border: none;
        padding: 15px 10px;
        font-weight: 600;
        color: #495057;
        background: #f8f9fa;
        border-bottom: 2px solid #dee2e6;
        white-space: nowrap;
    }
    
    .table td {
        padding: 15px 10px;
        vertical-align: middle;
        border-bottom: 1px solid #f1f3f4;
        white-space: nowrap;
    }
    
    .table tbody tr:hover {
        background-color: #f8f9fa;
        transform: translateY(-1px);
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        transition: all 0.3s ease;
    }
    
    .numero-os-badge {
        background: linear-gradient(135deg, #007bff 0%, #0056b3 100%);
        color: white;
        padding: 6px 12px;
        border-radius: 6px;
        font-weight: 600;
        font-size: 14px;
        letter-spacing: 1px;
    }
    
    .status-badge {
        padding: 4px 8px;
        border-radius: 4px;
        font-size: 12px;
        font-weight: 500;
    }
    
    .status-aberta { background: #fff3cd; color: #856404; }
    .status-andamento { background: #d1ecf1; color: #0c5460; }
    .status-finalizada { background: #d4edda; color: #155724; }
    .status-cancelada { background: #f8d7da; color: #721c24; }
    
    .action-buttons {
        display: flex;
        gap: 5px;
    }
    
    .btn-action {
        width: 35px;
        height: 35px;
        border-radius: 6px;
        display: flex;
        align-items: center;
        justify-content: center;
        border: none;
        transition: all 0.3s ease;
    }
    
    .btn-edit {
        background: #007bff;
        color: white;
    }
    
    .btn-edit:hover {
        background: #0056b3;
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(0, 123, 255, 0.3);
    }
    
    .btn-delete {
        background: #dc3545;
        color: white;
    }
    
    .btn-delete:hover {
        background: #c82333;
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(220, 53, 69, 0.3);
    }
    
    .empty-state {
        text-align: center;
        padding: 60px 20px;
        color: #6c757d;
    }
    
    .empty-state h5 {
        font-size: 24px;
        margin-bottom: 10px;
        color: #495057;
    }
    
    .empty-state p {
        font-size: 16px;
        margin-bottom: 0;
    }
    
    .btn-nova-os {
        background: white;
        color: #17a2b8;
        border: 2px solid white;
        padding: 12px 24px;
        border-radius: 8px;
        font-weight: 600;
        transition: all 0.3s ease;
    }
    
    .btn-nova-os:hover {
        background: transparent;
        color: white;
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(255,255,255,0.3);
    }
    
    .pagination-info {
        background: #f8f9fa;
        padding: 15px 30px;
        border-top: 1px solid #e9ecef;
        color: #6c757d;
        font-size: 14px;
    }
    
    .form-select-sm {
        width: auto;
        min-width: 80px;
    }
    
    /* Esconder elementos do DataTable */
    .dataTables_wrapper .dataTables_length,
    .dataTables_wrapper .dataTables_filter,
    .dataTables_wrapper .dataTables_info,
    .dataTables_wrapper .dataTables_paginate {
        display: none !important;
    }

    /* Estilos para Paginação Numérica */
    .pagination {
        margin-bottom: 0;
    }

    .pagination .page-link {
        color: #17a2b8;
        border: 1px solid #dee2e6;
        padding: 8px 12px;
        margin: 0 2px;
        border-radius: 6px;
        transition: all 0.3s ease;
        text-decoration: none;
    }

    .pagination .page-link:hover {
        background-color: #17a2b8;
        border-color: #17a2b8;
        color: white;
        transform: translateY(-1px);
        box-shadow: 0 2px 8px rgba(23, 162, 184, 0.3);
    }

    .pagination .page-item.active .page-link {
        background-color: #17a2b8;
        border-color: #17a2b8;
        color: white;
        font-weight: 600;
    }

    .pagination .page-item.disabled .page-link {
        color: #6c757d;
        background-color: #fff;
        border-color: #dee2e6;
        cursor: not-allowed;
    }

    .pagination .page-link:focus {
        box-shadow: 0 0 0 0.2rem rgba(23, 162, 184, 0.25);
    }
</style>

<div class="ordens-container">
    <!-- Header Azul -->
    <div class="ordens-header">
        <div class="row align-items-center">
            <div class="col">
                <h4 class="mb-0">Ordens de Serviço</h4>
            </div>
            <div class="col-auto">
                <a asp-action="Criar" class="btn btn-nova-os">
                    Nova OS
                </a>
            </div>
        </div>
    </div>

    <!-- Seção de Busca -->
    <div class="search-section">
        <div class="row align-items-center">
            <div class="col-md-8">
                <div class="input-group">
                    <input type="text" id="searchInput" class="form-control search-input" 
                           placeholder="Buscar por número da OS, cliente ou veículo...">
                </div>
            </div>
            <div class="col-md-4 text-end">
                <span class="ordem-count">
                    @Model.Count() OS(s)
                </span>
            </div>
        </div>
        
        <div class="row mt-3">
            <div class="col-md-6">
                <div class="d-flex align-items-center">
                    <label class="me-2 text-muted">Exibir:</label>
                    <select class="form-select form-select-sm" id="pageSizeSelect">
                        <option value="25">25</option>
                        <option value="50">50</option>
                        <option value="100">100</option>
                    </select>
                    <span class="ms-2 text-muted">resultados por página</span>
                </div>
            </div>
            <div class="col-md-6 text-end">
                <button class="btn btn-info" id="searchBtn">
                    Pesquisar
                </button>
            </div>
        </div>
    </div>

    <!-- Tabela -->
    <div class="table-container">
        <div class="table-responsive">
            <table class="table table-hover mb-0" id="ordensTable">
                <thead>
                    <tr>
                        <th>Nº OS</th>
                        <th>Cliente</th>
                        <th>Veículo</th>
                        <th>Mecânico</th>
                        <th>Descrição</th>
                        <th>Valor</th>
                        <th>Status</th>
                        <th>Data Abertura</th>
                        <th width="120">Ações</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var ordem in Model)
                    {
                        <tr>
                            <td>
                                <span class="numero-os-badge">@ordem.NumeroOS</span>
                                @if (!ordem.Ativo)
                                {
                                    <span class="status-badge status-cancelada ms-2">Inativa</span>
                                }
                            </td>
                            <td>
                                <div>
                                    <strong class="text-dark">@ordem.Cliente?.Nome</strong>
                                </div>
                                <small class="text-muted">@ordem.Cliente?.Telefone</small>
                            </td>
                            <td>
                                <div>
                                    <strong class="text-dark">@ordem.Veiculo?.Placa</strong>
                                </div>
                                <small class="text-muted">@ordem.Veiculo?.Marca @ordem.Veiculo?.Modelo</small>
                            </td>
                            <td>
                                <strong class="text-dark">@ordem.Mecanico</strong>
                            </td>
                            <td>
                                @if (ordem.Descricao?.Length > 50)
                                {
                                    <span title="@ordem.Descricao">@ordem.Descricao.Substring(0, 50)...</span>
                                }
                                else
                                {
                                    @ordem.Descricao
                                }
                            </td>
                            <td>
                                <span class="badge bg-success">R$ @ordem.Valor.ToString("N2")</span>
                            </td>
                            <td>
                                @{
                                    var statusClass = ordem.Status switch
                                    {
                                        "Aberta" => "status-aberta",
                                        "Em Andamento" => "status-andamento",
                                        "Finalizada" => "status-finalizada",
                                        "Cancelada" => "status-cancelada",
                                        _ => "status-cancelada"
                                    };
                                }
                                <span class="status-badge @statusClass">@ordem.Status</span>
                            </td>
                            <td>@ordem.DataAbertura.ToString("dd/MM/yyyy HH:mm")</td>
                            <td>
                                <div class="action-buttons">
                                    <a asp-action="Editar" asp-route-id="@ordem.Id" 
                                       class="btn-action btn-edit" title="Editar">
                                        ✎
                                    </a>
                                    <a asp-action="ApagarConfirmacao" asp-route-id="@ordem.Id" 
                                       class="btn-action btn-delete" title="Excluir">
                                        ×
                                    </a>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        @if (!Model.Any())
        {
            <div class="empty-state">
                <h5>Nenhuma ordem de serviço cadastrada</h5>
                <p>Clique em 'Nova OS' para começar</p>
            </div>
        }
    </div>

    <!-- Informações de Paginação -->
    <div class="pagination-info">
        <div class="row align-items-center">
            <div class="col-md-6">
                Mostrando @ViewBag.RegistroInicial até @ViewBag.RegistroFinal de @ViewBag.TotalRegistros registro(s)
            </div>
            <div class="col-md-6 text-end">
                @if (ViewBag.TotalPaginas > 1)
                {
                    <nav aria-label="Paginação">
                        <ul class="pagination pagination-sm justify-content-end mb-0">
                            @{
                                int paginaAtual = ViewBag.PaginaAtual;
                                int totalPaginas = ViewBag.TotalPaginas;
                                int inicio = Math.Max(1, paginaAtual - 2);
                                int fim = Math.Min(totalPaginas, paginaAtual + 2);
                            }

                            <!-- Botão Primeira Página -->
                            @if (paginaAtual > 1)
                            {
                                <li class="page-item">
                                    <a class="page-link" href="@Url.Action("Index", new { pagina = 1, tamanhoPagina = ViewBag.TamanhoPagina })" aria-label="Primeira">
                                        <span aria-hidden="true">&laquo;&laquo;</span>
                                    </a>
                                </li>
                            }

                            <!-- Botão Anterior -->
                            @if (paginaAtual > 1)
                            {
                                <li class="page-item">
                                    <a class="page-link" href="@Url.Action("Index", new { pagina = paginaAtual - 1, tamanhoPagina = ViewBag.TamanhoPagina })" aria-label="Anterior">
                                        <span aria-hidden="true">&laquo;</span>
                                    </a>
                                </li>
                            }

                            <!-- Números das Páginas -->
                            @for (int i = inicio; i <= fim; i++)
                            {
                                if (i == paginaAtual)
                                {
                                    <li class="page-item active">
                                        <span class="page-link">@i</span>
                                    </li>
                                }
                                else
                                {
                                    <li class="page-item">
                                        <a class="page-link" href="@Url.Action("Index", new { pagina = i, tamanhoPagina = ViewBag.TamanhoPagina })">@i</a>
                                    </li>
                                }
                            }

                            <!-- Botão Próximo -->
                            @if (paginaAtual < totalPaginas)
                            {
                                <li class="page-item">
                                    <a class="page-link" href="@Url.Action("Index", new { pagina = paginaAtual + 1, tamanhoPagina = ViewBag.TamanhoPagina })" aria-label="Próximo">
                                        <span aria-hidden="true">&raquo;</span>
                                    </a>
                                </li>
                            }

                            <!-- Botão Última Página -->
                            @if (paginaAtual < totalPaginas)
                            {
                                <li class="page-item">
                                    <a class="page-link" href="@Url.Action("Index", new { pagina = totalPaginas, tamanhoPagina = ViewBag.TamanhoPagina })" aria-label="Última">
                                        <span aria-hidden="true">&raquo;&raquo;</span>
                                    </a>
                                </li>
                            }
                        </ul>
                    </nav>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Inicializar DataTable com configurações personalizadas
            var table = $('#ordensTable').DataTable({
                language: {
                    url: '//cdn.datatables.net/plug-ins/1.13.7/i18n/pt-BR.json'
                },
                pageLength: 25,
                order: [[6, 'desc']], // Ordenar por data de abertura (decrescente)
                columnDefs: [
                    { orderable: false, targets: 7 } // Coluna de ações não ordenável
                ],
                dom: 't', // Apenas a tabela, sem controles
                searching: false, // Desabilitar busca padrão
                paging: false, // Desabilitar paginação padrão
                info: false // Desabilitar informações padrão
            });

            // Busca personalizada
            $('#searchInput').on('keyup', function() {
                table.search(this.value).draw();
            });

            // Botão de pesquisa
            $('#searchBtn').click(function() {
                table.search($('#searchInput').val()).draw();
            });

            // Alterar tamanho da página
            $('#pageSizeSelect').change(function() {
                table.page.len($(this).val()).draw();
            });

            // Tooltips
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[title]'));
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });
        });
    </script>
}
